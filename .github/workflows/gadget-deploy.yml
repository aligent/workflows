name: ðŸ¤– Gadget Deployment

on:
  workflow_call:
    inputs:
        app-name:
            description: "Gadget App name to deploy too (required)"
            type: string
            required: true
        staging-environment-name: 
            description: "Main development environment of Gadget Appp to push code to (required)"
            type: string
            required: false
            default: "staging"
        push-arguments:
            description: "Arguments (flags) to pass to ggt push CLI command"
            type: string
            required: false
        deploy arguments:
            description: "Arguments (flags) to pass to ggt deploy CLI command"
            type: string
            required: false

jobs:
  push: # Push changes from git to a "staging" environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install ggt
        run: |
          npm install -g ggt
          ggt version
        shell: bash

      - name: Push code to Gadget's Staging Environment
        run: |
          ggt push --app=${{ inputs.app-name }} --env=${{ inputs.staging-environment-name }} --force --allow-unknown-directory 
        shell: bash
        env:
          GGT_TOKEN: ${{ secrets.GGT_TOKEN }}

  deploy: # Deploy Gadget Staging Environment to Production
    runs-on: ubuntu-latest
    needs: push
    if: needs.push.result == 'success' && github.ref_name == 'production'
    steps:
      - uses: actions/checkout@v4

      - name: Install ggt
        run: |
          npm install -g ggt
          ggt version
        shell: bash

      - name: Deploy to Gadget's Production Environment from Staging # Run ggt deploy to deploy changes from Gadget's Staging environment to Production
        run: |
          ggt deploy --app=${{ inputs.app-name }} --env=${{ inputs.staging-environment-name }} --force --allow-unknown-directory --allow-problems
        shell: bash
        env:
          GGT_TOKEN: ${{ secrets.GGT_TOKEN }}